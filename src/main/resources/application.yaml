spring:
  datasource:
    url: jdbc:mysql://localhost:3306/spring_oauth2?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      show-sql: true
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${clientId}
            clientSecret: ${clientSecret}
            redirectUri: http://localhost:8080/login/oauth2/code/google
            flowName: GeneralOAuthFlow
            authorizationUri: "https://accounts.google.com/o/oauth2/v2/auth"
            tokenUri: "https://www.googleapis.com/oauth2/v4/token"
            userInfoUri: "https://www.googleapis.com/oauth2/v3/userinfo"
            jwkSetUri: "https://www.googleapis.com/oauth2/v3/certs"
            clientName: "Google"
            scope:
              - email
              - profile
              - address
              - phone
              - openid
